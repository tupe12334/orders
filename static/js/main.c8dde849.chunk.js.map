{"version":3,"sources":["assets/pin.svg","assets/Themes/MainTheme.js","assets/OrderStatusEnum.js","services/nominatim.js","services/firebase.js","components/OrderInputForum.js","services/GovAPI/cityList.js","services/GovAPI/StreetsList.js","components/orders/OneOrder.js","components/orders/OrderShow.js","pages/Routes.js","pages/Home.js","pages/OrderPlace.js","pages/Show.js","pages/Error.js","components/Body.js","components/Menu.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MyTheme","createMuiTheme","direction","OrderStatusEnum","inWork","done","received","getGeoCoding","params","setPostionInState","house","street","city","checkIfAddressGood","latLng","request","$","ajax","dataType","success","data","find","attr","undefined","error","xhr","status","console","log","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","useStyles","makeStyles","OrderInputForum","cityListO","useState","streetList","setStreetList","streetListO","setStreetListO","cityList","setCityList","citySelected","setCitySelected","submitAlertStatus","setSubmitAlertStatus","initialValues","orderSetDate","Date","reciverName","useEffect","setArrayInState","each","cityNameOBJ","this","push","textContent","trim","getCityList","map","option","firstLetter","toUpperCase","test","title","length","Typography","color","variant","onSubmit","object","setSubmitting","resetForm","DDdate","String","getDate","padStart","MMdate","getMonth","YYdate","getFullYear","MMtime","getMinutes","HHtime","getHours","SStime","getSeconds","postion","latitude","longitude","ref","validateSchema","number","min","values","isSubmitting","setFieldValue","handleChange","FormControl","margin","required","label","name","type","component","TF","Autocomplete","id","options","getOptionLabel","groupBy","onChange","e","value","resource_id","limit","q","fields","sort","StreetsList","url","result","records","forEach","includes","שם_ישוב","שם_רחוב","getStreets","noOptionsText","renderInput","TextField","loadingText","Button","disabled","endIcon","Icon","style","transform","CircularProgress","size","Snackbar","open","autoHideDuration","elevation","severity","OneOrder","props","order","position","setposition","React","anchorEl","setAnchorEl","colors","white","setBackGroundColor","statusIcon","setStatusIcon","setBackgroungColorFunction","tempIconName","iconColor","tempIcon","address","mapicon","L","icon","iconUrl","leafOrange","iconSize","iconAnchor","popupAnchor","red","yellow","green","marker","Marker","Popup","Map","height","center","zoom","className","tap","touchZoom","TileLayer","attribution","ThemeProvider","theme","MainTheme","CssBaseline","Card","CardHeader","subheader","date","avatar","CardActionArea","CardContent","CardActions","onClick","event","currentTarget","Menu","keepMounted","Boolean","onClose","Object","statuse","index","MenuItem","key","selected","ordersRef","OrderShow","ordersViewToShow","setordersViewToShow","on","snap","temp","val","temp2","entries","thisOrder","dateformat","Grid","counter","item","rcivername","container","spacing","justify","Routes","path","sidebarName","Header","Title","Body","Home","to","textDecoration","prop","exact","Error","display","textAlign","fontSize","Divider","List","MenuList","routeName","window","location","pathname","ListItemIcon","ListItemText","primary","NavBar","menuDrawerState","setMenuDrawerState","toggleDrawer","AppBar","Toolbar","IconButton","edge","aria-label","Drawer","role","onKeyDown","fontWeight","jss","create","plugins","jssPreset","rtl","App","StylesProvider","dir","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c8dde849.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pin.82e1eb1f.svg\";","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nconst MyTheme = createMuiTheme({\r\n  direction: 'rtl',\r\n});\r\nexport default MyTheme","const OrderStatusEnum = {\r\n    inWork: 'inWork',\r\n    done: 'done',\r\n    received: 'received'\r\n}\r\n\r\nexport default OrderStatusEnum","import $ from \"jquery\";\r\n\r\nexport default function getGeoCoding(params, setPostionInState) {\r\n    var house = params.house\r\n    var street = params.street\r\n    var city = params.city\r\n    if (checkIfAddressGood(params)) {\r\n        /*\r\n        console.log(\"params\");\r\n        console.log(params);\r\n        */\r\n        var latLng = [0, 0]\r\n        const request = `https://nominatim.openstreetmap.org/search?q=${house}+${street},+${city}&format=xml&polygon_geojson=1&addressdetails=1`\r\n        //console.log(request);\r\n        $.ajax(\r\n            request, {\r\n            dataType: \"xml\",\r\n            success: function (data) {\r\n                /*\r\n                console.log(\"place\");\r\n                console.log($(data).find(\"place\"));\r\n                */\r\n                latLng[0] = $(data).find(\"place\").attr(\"lat\")\r\n                latLng[1] = $(data).find(\"place\").attr(\"lon\")\r\n                /*\r\n                console.log(\"latLng\");\r\n                console.log(latLng);*/\r\n                if (latLng !== null && latLng[0] !== undefined && latLng[1] !== undefined) {\r\n                    setPostionInState(latLng)\r\n                }\r\n            },\r\n            error: function (xhr, status, error) {\r\n                console.log(\"error\");\r\n                console.log(error);\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\nfunction checkIfAddressGood(params) {\r\n    if (params.house !== \"\" && params.street !== \"\" && params.city !== \"\") {\r\n        return true\r\n    }\r\n    return false\r\n}","import firebase from 'firebase';\r\nimport getGeoCoding from './nominatim';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCKxKgE1Mh7DauQBBhHAnJnnuIJaRLhj74\",\r\n  authDomain: \"orders-cd834.firebaseapp.com\",\r\n  databaseURL: \"https://orders-cd834.firebaseio.com\",\r\n  projectId: \"orders-cd834\",\r\n  storageBucket: \"orders-cd834.appspot.com\",\r\n  messagingSenderId: \"1099359698304\",\r\n  appId: \"1:1099359698304:web:1f290a07e5ad1c1740d565\",\r\n  measurementId: \"G-HL9D0JZH4N\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.database();\r\n\r\n\r\n\r\nexport function sendObjectToFireBase(object) {\r\n  getGeoCoding(object, (postion) => {\r\n    console.log(\"postion\");\r\n    console.log(postion);\r\n    object.latitude = postion[0]\r\n    object.longitude = postion[1]\r\n    console.log(\"object that send to firebase\");\r\n    console.log(object);\r\n    if (object !== undefined) {\r\n      console.log(\"object that send to firebase\");\r\n      console.log(object);\r\n      db.ref('orders').push(object);\r\n    }\r\n  })\r\n}\r\n","import { Button, CircularProgress, FormControl, Snackbar, TextField, Typography } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { TextField as TF } from 'formik-material-ui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { number, object } from 'yup';\r\nimport OrderStatusEnum from '../assets/OrderStatusEnum';\r\nimport { sendObjectToFireBase } from '../services/firebase';\r\nimport getCityList from '../services/GovAPI/cityList';\r\nimport getStreets from \"../services/GovAPI/StreetsList\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((MyTheme) => ({\r\n  }));\r\n  \r\n\r\n\r\n\r\nexport default function OrderInputForum() {\r\n    const classes = useStyles();\r\n\r\n    var cityListO = []\r\n    //var streetListO = []\r\n    const [streetList, setStreetList] = useState([])\r\n    const [streetListO, setStreetListO] = useState([])\r\n    const [cityList, setCityList] = useState([])\r\n    const [citySelected, setCitySelected] = useState(false)\r\n    const [submitAlertStatus, setSubmitAlertStatus] = useState(false)\r\n    const initialValues = {\r\n        status: OrderStatusEnum.received,\r\n        orderSetDate: new Date(),\r\n        reciverName: \"\",\r\n        city: '',\r\n        street: '',\r\n        house: '',\r\n    };\r\n    useEffect(() => {\r\n        getCityList(setCityList)\r\n    }, []);\r\n    cityListO = cityList.map((option) => {\r\n        const firstLetter = option[0].toUpperCase();\r\n        return {\r\n            firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\r\n            title: option\r\n        };\r\n    })\r\n    const handleOpenAlert = () => {\r\n        setSubmitAlertStatus(true);\r\n      };\r\n    useEffect(() => {\r\n        if (streetList !== undefined && streetList !== null) {\r\n            if (streetList.length > 0) {\r\n                setStreetListO(streetList.map((option) => {\r\n                    const firstLetter = option[0].toUpperCase();\r\n                    return {\r\n                        firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\r\n                        title: option\r\n                    };\r\n                }));\r\n            }\r\n        }\r\n\r\n    }, [streetList]);\r\n    const dibug = false\r\n    return (\r\n        <div>\r\n            <Typography color=\"primary\" variant=\"h3\">\r\n                אנא הכנס פרטי הזמנה\r\n            </Typography>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={(data, { setSubmitting, resetForm }) => {\r\n                    setSubmitting(true)\r\n                    data.DDdate = String(data.orderSetDate.getDate()).padStart(2, 0)\r\n                    data.MMdate = String(data.orderSetDate.getMonth() + 1).padStart(2, 0)\r\n                    data.YYdate = data.orderSetDate.getFullYear()\r\n                    data.MMtime = data.orderSetDate.getMinutes()\r\n                    data.HHtime = data.orderSetDate.getHours()\r\n                    data.SStime = data.orderSetDate.getSeconds()\r\n                    \r\n                    sendObjectToFireBase(data)\r\n                    resetForm()\r\n                    handleOpenAlert()\r\n                    setSubmitting(false)\r\n                }}\r\n                validateSchema={object({\r\n                    house: number().min(10),\r\n                    //reciverName: text()\r\n                })\r\n                }>\r\n                {({ values, isSubmitting, handleChange, setFieldValue }) => (\r\n                    <Form>\r\n                        <FormControl margin=\"normal\" required>\r\n                            <Field label=\"שם המקבל\" name=\"reciverName\" type=\"input\" variant=\"filled\" component={TF} />\r\n                            <Autocomplete\r\n                                id=\"city\"\r\n                                name=\"city\"\r\n                                options={cityListO}\r\n                                getOptionLabel={(option) => option.title}\r\n                                groupBy={(option) => option.firstLetter}\r\n                                //style={{ width: 300 }}\r\n                                onChange={(e, value) => {\r\n                                    //console.log(\"enter change city\");\r\n                                    //console.log(getStreets(value.title));\r\n                                    if (value) {\r\n                                        //console.log(\"setStreetList\");\r\n                                        getStreets(value.title, setStreetList)\r\n                                        //console.log(getStreetsFromAutoCom(value.title));\r\n                                        //streetListO = getStreetsFromAutoCom(value.title)\r\n                                        setCitySelected(true)\r\n                                    }\r\n                                    else {\r\n                                        setCitySelected(false)\r\n                                        setStreetListO([])\r\n                                    }\r\n                                    //console.log(streetList);\r\n                                    setFieldValue(\r\n                                        \"city\",\r\n                                        value !== null ? value.title : initialValues.city\r\n                                    );\r\n                                }}\r\n                                noOptionsText=\"לא נמצא חיפוש מתאים...\"\r\n                                renderInput={(params) => <TextField {...params} label=\"עיר\" name=\"city\" type=\"input\" variant=\"filled\" id=\"city\" />}\r\n                                loadingText=\"טוען...\" />\r\n                            <Autocomplete\r\n                                id=\"street\"\r\n                                name=\"street\"\r\n                                options={streetListO ? streetListO : [\"\"]}\r\n                                getOptionLabel={(option) => option.title}\r\n                                groupBy={(option) => option.firstLetter}\r\n                                //style={{ width: 300 }}\r\n                                onChange={(e, value) => {\r\n                                    //console.log(value);\r\n                                    setFieldValue(\r\n                                        \"street\",\r\n                                        value !== null ? value.title : initialValues.street\r\n                                    );\r\n                                }}\r\n                                noOptionsText={citySelected ? \"לא נמצא חיפוש מתאים...\" : \"לא נבחר עיר\"}\r\n                                renderInput={(params) => <TextField {...params} label=\"רחוב\" name=\"street\" type=\"input\" variant=\"filled\" id=\"street\" />}\r\n                                loadingText=\"טוען...\" />\r\n                            <Field label=\"מספר בית\" name=\"house\" type=\"input\" variant=\"filled\" component={TF} />\r\n                            <Button variant=\"contained\" color=\"primary\" disabled={isSubmitting} type=\"submit\" endIcon={<Icon style={{ transform: \"scaleX(-1)\" }}>send</Icon>}>{isSubmitting ? <CircularProgress size=\"1\" /> : \"שלח\"}</Button>\r\n                        </FormControl>\r\n                        {dibug ? <pre>{JSON.stringify(values, null, 2)}</pre> : null}\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            <Snackbar open={submitAlertStatus} autoHideDuration={6000}>\r\n                <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">\r\n                    ההזמנה התקבלה בהצלחה!\r\n               </MuiAlert>\r\n            </Snackbar>\r\n        </div >\r\n    )\r\n}","import $ from \"jquery\";\r\nexport default function getCityList(setArrayInState) {\r\n    const GovURL = \"https://data.gov.il/dataset/3fc54b81-25b3-4ac7-87db-248c3e1602de/resource/72bd51be-512b-4430-b2d2-f3295c90e569/download/72bd51be-512b-4430-b2d2-f3295c90e569.xml\"\r\n    var cityList = []\r\n\r\n    $.ajax(\r\n        GovURL, {\r\n        dataType: \"xml\", success: function (data) {\r\n            $(data)\r\n                .find(\"ROW\")\r\n                .each(function () {\r\n                    const city = $(this)\r\n                    const cityNameOBJ = city.find(\"שם_ישוב\")\r\n                    //console.log(cityNameOBJ[0].textContent);\r\n                    cityList.push(cityNameOBJ[0].textContent.trim())\r\n                })\r\n            //console.log(cityList);\r\n            setArrayInState(cityList)\r\n        }\r\n    }\r\n    )\r\n\r\n}","import $ from \"jquery\";\r\n\r\nexport default function getStreets(city, setArrayInState, params) {\r\n    if (city !== \"\") {\r\n        const action = \"datastore_search\"\r\n        //const test = \"https://data.gov.il/api/3/action/datastore_search\"\r\n        var data = {\r\n            resource_id: 'a7296d1a-f8c9-4b70-96c2-6ebb4352f8e3', // the resource id\r\n            limit: 3200, // get 5 results\r\n            q: city, // query for 'jones'\r\n            fields: \"שם_ישוב,שם_רחוב\",\r\n            sort: \"שם_רחוב\"\r\n        };\r\n        var StreetsList = []\r\n        //console.log(StreetsList);\r\n        //console.log(\"typeof array \"+typeof (StreetsList));\r\n        const request = `https://data.gov.il/api/3/action/${action}`\r\n        $.ajax({\r\n            url: request,\r\n            data: data,\r\n            dataType: 'json',\r\n            success: function (data) {\r\n                var streets = $(data.result)[0].records\r\n                /*\r\n                console.log(\"from api\");\r\n                console.log($(data.result)[0].records);\r\n                */\r\n                streets.forEach(street => {\r\n                    if (city.includes(street.שם_ישוב.trim())) {\r\n                        StreetsList.push(street.שם_רחוב.trim())\r\n                    }\r\n                });\r\n                if (StreetsList) {\r\n                    /*console.log(\"street\");\r\n                    console.log(StreetsList);\r\n                    console.log(typeof (StreetsList));\r\n                    console.log(StreetsList.length);*/\r\n                    setArrayInState(StreetsList)\r\n                }\r\n            }\r\n        })\r\n    }\r\n}","import { Card, CardContent, CardHeader, Menu, MenuItem, CardActions, CardActionArea, Button, colors, Collapse, Typography, Icon, makeStyles, ThemeProvider } from '@material-ui/core/';\r\nimport L from 'leaflet';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\r\nimport leafOrange from '../../assets/pin.svg';\r\nimport getGeoCoding from \"../../services/nominatim.js\";\r\nimport OrderStatusEnum from '../../assets/OrderStatusEnum';\r\nimport { green, purple } from '@material-ui/core/colors';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MainTheme from '../../assets/Themes/MainTheme';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\n\r\nexport default function OneOrder(props) {\r\n    const order = props.order\r\n    const [position, setposition] = useState([0, 0])\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [backGroundColor, setBackGroundColor] = useState(colors.white)\r\n    const [statusIcon, setStatusIcon] = useState(null)\r\n    useEffect(() => {\r\n        setBackgroungColorFunction()\r\n        var tempIconName = ''\r\n        var iconColor = ''\r\n        switch (order.status) {\r\n            case OrderStatusEnum.received:\r\n                tempIconName = \"contactless\"\r\n                iconColor = 'red'\r\n                break;\r\n            case OrderStatusEnum.inWork:\r\n                tempIconName = \"work\"\r\n                iconColor = 'Orange'\r\n                break;\r\n            case OrderStatusEnum.done:\r\n                tempIconName = \"done\"\r\n                iconColor = 'green'\r\n                break;\r\n            default:\r\n                tempIconName = ''\r\n                break;\r\n        }\r\n        var tempIcon = <Icon style={{ color: iconColor }}> {tempIconName}</Icon >\r\n        console.log(tempIcon);\r\n        setStatusIcon(tempIcon)\r\n    }, [order.status]);\r\n    const zoom = 13\r\n    useEffect(() => {\r\n        //console.log(props.order);\r\n        if (order.latitude !== \"\" && order.longitude !== \"\") {\r\n            setposition([order.latitude, order.longitude])\r\n        }\r\n        else (\r\n            getGeoCoding(props.address, setposition)\r\n        )\r\n        /*\r\n        var fulladdress = props.address.street + \" \" + props.address.house + \" \" + props.address.city\r\n        Nominatim.search({ q: fulladdress }, function (err, opts, results) {\r\n            console.log(err);\r\n            console.log(results);\r\n        })*/\r\n        //console.log(position);\r\n    }, [order])\r\n    var mapicon = L.icon({\r\n        iconUrl: leafOrange,\r\n        iconSize: [40, 100], // size of the icon\r\n        iconAnchor: [20, 70], // point of the icon which will correspond to marker's location\r\n        popupAnchor: [-3, -76]\r\n    })\r\n\r\n    const handleOpenMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleCloseMenu = (event) => {\r\n        setBackgroungColorFunction()\r\n        setAnchorEl(null);\r\n    };\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    const setBackgroungColorFunction = () => {\r\n        //console.log(\"enter color selection\");\r\n        console.log(order.status);\r\n        switch (order.status) {\r\n            case OrderStatusEnum.received:\r\n                setBackGroundColor(colors.red)\r\n                break;\r\n            case OrderStatusEnum.inWork:\r\n                setBackGroundColor(colors.yellow)\r\n                break;\r\n            case OrderStatusEnum.done:\r\n                setBackGroundColor(colors.green)\r\n                break;\r\n            default:\r\n                break;\r\n                console.log(backGroundColor);\r\n        }\r\n    }\r\n    //TODO in iphone cant press the pin auto close\r\n    const marker = (\r\n        <Marker position={position} icon={mapicon} >\r\n            <Popup>\r\n                {order.street + \" \" + order.house}\r\n                <br />\r\n                {order.city}\r\n            </Popup>\r\n        </Marker>\r\n    )\r\n    const map = (\r\n        < Map style={{ height: \"300px\" }} center={position} zoom={zoom} className=\"map\" tap touchZoom >\r\n            <TileLayer\r\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> '\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            {marker}\r\n        </Map >)\r\n    return (\r\n        <ThemeProvider theme={MainTheme}>\r\n            <CssBaseline />\r\n            <Card style={{ margin: \"10px\" }}>\r\n                <CardHeader\r\n                    title={\"משלוח אל: \" + order.reciverName}\r\n                    subheader={props.date}\r\n                    avatar={statusIcon}>\r\n                </CardHeader>\r\n                <CardActionArea>\r\n                    <CardContent>\r\n                        <div>\r\n                            {map}\r\n                        </div>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions >\r\n                    <Button onClick={handleOpenMenu} color=\"secondary\" variant=\"contained\">{order.status}</Button>\r\n                    <Menu\r\n                        keepMounted\r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleCloseMenu}\r\n                    >\r\n                        {Object.values(OrderStatusEnum).map((statuse, index) => (\r\n                            <MenuItem\r\n                                key={index}\r\n                                selected={statuse === order.status}\r\n                            >\r\n                                {statuse}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Menu>\r\n                </CardActions>\r\n            </Card>\r\n        </ThemeProvider>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { db } from '../../services/firebase';\r\nimport { Grid } from '@material-ui/core';\r\nimport OneOrder from './OneOrder';\r\n\r\nvar ordersRef = db.ref('orders')\r\n\r\n\r\nexport default function OrderShow() {\r\n    const [ordersViewToShow, setordersViewToShow] = useState(null)\r\n    useEffect(() => {\r\n        getOrdersFromDB()\r\n    }, []);\r\n    function getOrdersFromDB() {\r\n        ordersRef.on('value', snap => {\r\n            var temp = snap.val()\r\n            var temp2 = Object.entries(temp)\r\n            setordersViewToShow(temp2.map((order) => {\r\n                var thisOrder = order[1]\r\n                //console.log(order[1]);\r\n                var dateformat = thisOrder.DDdate + \"/\" + thisOrder.MMdate + \"/\" + thisOrder.YYdate\r\n                var address = { street: thisOrder.street, house: thisOrder.house, city: thisOrder.city }\r\n                //console.log(address);\r\n                //console.log(dateformat);\r\n                return (\r\n                    <Grid key={counter} item>\r\n                        <OneOrder key={counter++} rcivername={order[1].reciverName} date={dateformat} address={address} order={thisOrder} />\r\n                    </Grid>\r\n                )\r\n            })\r\n            )\r\n        })\r\n    }\r\n\r\n    var counter = 0\r\n    return (\r\n        <Grid container spacing={2} >\r\n            <Grid item>\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                    {ordersViewToShow}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n\r\n\r\n\r\n}","import Home from './Home';\r\nimport OrderPlace from './OrderPlace';\r\nimport Show from './Show';\r\n\r\n\r\nconst Routes = [\r\n    {\r\n        path: '/',\r\n        sidebarName: 'בית',\r\n        component: Home,\r\n        icon:\"home\"\r\n    },\r\n    {\r\n        path: '/Place-an-order',\r\n        sidebarName: 'הכנס הזמנה',\r\n        component: OrderPlace,\r\n        icon:\"input\"\r\n    },\r\n    {\r\n        path: '/Show',\r\n        sidebarName: 'צפה בהזמנות',\r\n        component: Show,\r\n        icon:\"inbox\"\r\n    },\r\n]\r\nexport default Routes\r\n","import React from 'react';\r\nimport { Card, Button } from \"tabler-react\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title>Card Title</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Button color=\"primary\">A Button</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport OrderInputForum from '../components/OrderInputForum';\r\n\r\nexport default function OrderPlace(){\r\n    return(\r\n        <div>\r\n            <OrderInputForum/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport OrderShow from '../components/orders/OrderShow';\r\n\r\nexport default function Show() {\r\n    return (\r\n        <div>\r\n            <OrderShow />\r\n        </div>\r\n    )\r\n}","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <div>\r\n                404 דף לא קיים אנא נווט לדף הבית ע\"י לחיצה\r\n            </div>\r\n            <br/>\r\n            <NavLink to='/' style={{ textDecoration: 'none' }}>\r\n                <Button variant=\"contained\" color=\"primary\">כאן</Button>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Routes from '../pages/Routes';\r\nimport Error from '../pages/Error';\r\n\r\nexport default function Body() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                {Routes.map((prop) => {\r\n                    //console.log(prop);\r\n                    return (\r\n                        <Route path={prop.path} exact component={prop.component} key={prop.path}>\r\n                            <prop.component />\r\n                        </Route>\r\n                    )\r\n                })}\r\n                <Route component={Error} />\r\n            </Switch>\r\n\r\n        </div>\r\n    )\r\n}","import { Divider, List, ListItemIcon, ListItemText, MenuItem, MenuList, Typography } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Routes from '../pages/Routes';\r\n\r\n\r\nexport default function Menu() {\r\n    const activeRoute = (routeName) => {\r\n        return window.location.pathname === routeName ? true : false;\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Typography variant='inherit' display=\"block\" style={{ textAlign: \"center\", fontSize: \"25px\" }}>תפריט ראשי</Typography>\r\n            </div>\r\n            <Divider variant=\"middle\" />\r\n\r\n            <List>\r\n                <MenuList>\r\n                    {Routes.map((prop, key) => {\r\n                        return (\r\n                            <NavLink to={prop.path} style={{ textDecoration: 'none' }} key={key}>\r\n                                <MenuItem selected={activeRoute(prop.path)}>\r\n                                    <ListItemIcon ><Icon>{prop.icon}</Icon></ListItemIcon>\r\n                                    <ListItemText primary={prop.sidebarName} style={{ color: \"black\" }} />\r\n                                </MenuItem>\r\n                            </NavLink>\r\n                        )\r\n                    })}\r\n                </MenuList>\r\n            </List>\r\n        </div>\r\n    )\r\n}","import { AppBar, Button, Drawer, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport React from 'react';\r\nimport Menu from './Menu';\r\n\r\nexport default function NavBar(props) {\r\n    const [menuDrawerState, setMenuDrawerState] = React.useState(false);\r\n\r\n    const toggleDrawer = (open) => (event) => {\r\n        //console.log(event);\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setMenuDrawerState(open);\r\n    };\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\r\n                    <Icon>menu</Icon>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" >\r\n                    מערך המשלוחים\r\n                   </Typography>\r\n                <Drawer open={menuDrawerState} onClose={toggleDrawer(false)}>\r\n                    <div\r\n                        role=\"presentation\"\r\n                        onClick={toggleDrawer(false)}\r\n                        onKeyDown={toggleDrawer(false)}\r\n                    >\r\n                        <Menu />\r\n                    </div>\r\n                </Drawer>\r\n                <Button color=\"inherit\" style={{ fontWeight: \"bold\" }} >התחבר</Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import { jssPreset, StylesProvider, ThemeProvider } from '@material-ui/core/styles';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport React, { useState } from 'react';\nimport './App.css';\nimport MyTheme from './assets/Themes/MainTheme';\nimport Body from './components/Body';\nimport NavBar from './components/NavBar';\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nfunction App() {\nconst [signin,setSignin] = useState(false)\n  return (\n    <ThemeProvider theme={MyTheme}>\n      <StylesProvider jss={jss}>\n        <div className=\"App\" dir=\"rtl\">\n          <NavBar />\n          <Body />\n        </div>\n      </StylesProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'leaflet/dist/leaflet.css';\nimport \"tabler-react/dist/Tabler.RTL.css\";\n\n\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}